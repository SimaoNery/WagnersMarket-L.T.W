
DROP TABLE IF EXISTS WISHLIST;
DROP TABLE IF EXISTS CART;
DROP TABLE IF EXISTS IMG;
DROP TABLE IF EXISTS ITEM_CATEGORY;
DROP TABLE IF EXISTS ITEM;
DROP TABLE IF EXISTS MSG;
DROP TABLE IF EXISTS CATEGORY;
DROP TABLE IF EXISTS CONDITION;
DROP TABLE IF EXISTS SZE;  
DROP TABLE IF EXISTS USR;

-- Create USER table
CREATE TABLE USR (
    UserId INTEGER NOT NULL PRIMARY KEY,
    Name TEXT NOT NULL,
    Username TEXT NOT NULL,
    Password TEXT NOT NULL,
    Email TEXT NOT NULL,
    Admin BOOLEAN DEFAULT FALSE
);

-- Create CONDITION table
CREATE TABLE CONDITION (
    ConditionId INTEGER PRIMARY KEY,
    Condition TEXT NOT NULL
);

-- Create Sze table
CREATE TABLE SZE (
    SzeId INTEGER PRIMARY KEY,
    Sze TEXT NOT NULL
);

-- Create ITEM table
CREATE TABLE ITEM (
    ItemId INTEGER NOT NULL PRIMARY KEY,
    UserId INTEGER NOT NULL,
    Price FLOAT NOT NULL,
    Description TEXT NOT NULL,
    ItemCondition TEXT NOT NULL,
    ItemSze TEXT NOT NULL,
    Brand TEXT,
    CONSTRAINT PriceConstraint CHECK (Price > 0),
    FOREIGN KEY (UserId) REFERENCES USR (UserId) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ItemCondition) REFERENCES CONDITION (ConditionId) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ItemSze) REFERENCES Sze (SzeId) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Create MSG table
CREATE TABLE MSG (
    MSGId INTEGER NOT NULL PRIMARY KEY,
    AuthorId INTEGER NOT NULL,
    ReceiverId INTEGER NOT NULL,
    String TEXT NOT NULL,
    Timestamp DATETIME NOT NULL,
    FOREIGN KEY (AuthorId) REFERENCES USR (UserId) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ReceiverId) REFERENCES USR (UserId) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Create WISHLIST table
CREATE TABLE WISHLIST (
    UserId INTEGER NOT NULL,
    ItemId INTEGER NOT NULL,
    FOREIGN KEY (UserId) REFERENCES USR (UserId) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ItemId) REFERENCES ITEM (ItemId) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT PK_Wishlist PRIMARY KEY (UserId, ItemId)
);

-- Create CART table
CREATE TABLE CART (
    UserId INTEGER NOT NULL,
    ItemId INTEGER NOT NULL,
    FOREIGN KEY (UserId) REFERENCES USR (UserId) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ItemId) REFERENCES ITEM (ItemId) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT PK_Cart PRIMARY KEY (UserId, ItemId)
);

-- Create CATEGORY table
CREATE TABLE CATEGORY (
    Category TEXT NOT NULL PRIMARY KEY
);

CREATE TABLE ITEM_CATEGORY (
    CategoryId INTEGER NOT NULL,
    ItemId INTEGER NOT NULL,
    FOREIGN KEY (CategoryId) REFERENCES CATEGORY (CategoryId) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ItemId) REFERENCES ITEM (ItemId) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT PK_ItemCategory PRIMARY KEY (CategoryId, ItemId)
);

CREATE TABLE IMG (
    Path TEXT NOT NULL PRIMARY KEY,
    ItemId INTEGER NOT NULL,
    FOREIGN KEY (ItemId) REFERENCES ITEM (ItemId) ON DELETE CASCADE ON UPDATE CASCADE
);
